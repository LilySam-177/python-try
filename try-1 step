#列表推导式   变量1 = [变量的处理 for i in 容器型数据 if 条件判断表达式]
#1
new = [(x,y) for x in [1,2,3] for y in [3,1,4] if x != y]
# [(1,3),(1,4),(2,3),(2,1),(2,4),(3,1),(3,4)]

#2
M = [
    [1,2,3],
    [4,5,6],
    [7,8,9]
]
N = [
    [2,2,2],
    [3,3,3],
    [4,4,4]
]
a = [(M[i][j]*N[i][j]) for i in range(3) for j in range(3)]
print(a)     # [2, 4, 6, 12, 15, 18, 28, 32, 36]
b = [[(M[i][j]*N[i][j]) for j in range(3)] for i in range(3)]
print(b)     #[[2, 4, 6], [12, 15, 18], [28, 32, 36]]


# 字典中键和值的取值
a = {'user':'admin','age':20,'phone':"133"}
for k,v in a.items():
    print(k,v)
# user admin
# age 20
# phone 133



#others
# opencv 最常用的图像处理类库
import cv2
# 用作jupyter展示图片用
from PIL import Image 
# 提前准备好的图像路径
image_path = '/data/course_data/AI/模块课-目标检测/jinmao1.jpg'
# 提前准备好的框坐标，惯例顺序为xmin ymin xmax ymax
coordinate = [52, 9, 213, 248]
# 为了方便大家看，拆出来4个变量
x_min, y_min, x_max, y_max = coordinate
# 将磁盘中的图像数据读取进来
img = cv2.imread(image_path)
# 画矩形，在opencv画矩形的api中，传入的是左上角以及右下角的坐标，后面的参数是框的颜色及粗细
img = cv2.rectangle(img, (x_min, y_min), (x_max, y_max), (0,0,255), 2)
# 转换成可以再jupyter中展示的格式并展示图片
display(Image.fromarray(cv2.cvtColor(img,cv2.COLOR_BGR2RGB)) )
# 转换成可以再jupyter中展示的格式并展示图片
display(Image.fromarray(cv2.cvtColor(img,cv2.COLOR_BGR2RGB)) )

#结果在一个狗狗图片出做出了框图
